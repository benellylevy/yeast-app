import React, { useState, useEffect, useCallback } from 'react';
import SystemHeader from '../components/dashboard/SystemHeader';
import RealtimeChart from '../components/dashboard/RealtimeChart';
import FeedbackLogTable from '../components/dashboard/FeedbackLogTable';
import SystemPaths from '../components/dashboard/SystemPaths';
import ControlButtons from '../components/dashboard/ControlButtons';
import SystemConsole from '../components/dashboard/SystemConsole';
import { ExperimentData } from "@/entities/ExperimentData";
import { FeedbackLog } from "@/entities/FeedbackLog";
import { SystemStatus } from "@/entities/SystemStatus";


export default function Dashboard() {
  const [experimentData, setExperimentData] = useState([]);
  const [feedbackLogs, setFeedbackLogs] = useState([]);
  const [systemStatuses, setSystemStatuses] = useState([]);

  const fetchData = useCallback(async () => {
    try {
      const [expData, fLogs, sStatus] = await Promise.all([
        ExperimentData.list('-timestamp', 50),
        FeedbackLog.list('-timestamp', 20),
        SystemStatus.list('-updated_date')
      ]);
      setExperimentData(expData);
      setFeedbackLogs(fLogs);
      setSystemStatuses(sStatus);
    } catch (error) {
      if (error.message && !error.message.includes('429')) {
        console.error("Error fetching data:", error);
      }
    }
  }, []);

  useEffect(() => {
    fetchData(); // Initial fetch
    const interval = setInterval(fetchData, 10000); // Fetch data every 10 seconds
    return () => clearInterval(interval);
  }, [fetchData]);

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Custom CSS for glow effects */}
      <style jsx>{`
        .text-shadow-glow {
          text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
        }
        
        /* Scrollbar styling */
        ::-webkit-scrollbar {
          width: 8px;
        }
        
        ::-webkit-scrollbar-track {
          background: #1a1a1a;
        }
        
        ::-webkit-scrollbar-thumb {
          background: #00ffcc;
          border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
          background: #00ddaa;
        }
      `}</style>

      {/* Header with title, phase, and clock */}
      <SystemHeader experimentData={experimentData} />
      
      {/* Main content grid */}
      <div className="px-8 pb-8 space-y-8">
        {/* Top row: Log table and Chart with paths */}
        <div className="grid lg:grid-cols-12 gap-8">
          <div className="lg:col-span-4">
            <FeedbackLogTable feedbackLogs={feedbackLogs} />
          </div>
          <div className="lg:col-span-8">
            <div className="space-y-6">
              <RealtimeChart experimentData={experimentData} refreshData={fetchData} />
              <SystemPaths systemStatuses={systemStatuses} />
            </div>
          </div>
        </div>

        {/* Control buttons */}
        <ControlButtons systemStatuses={systemStatuses} refreshData={fetchData} />

        {/* System console */}
        <SystemConsole systemStatuses={systemStatuses} />
      </div>
    </div>